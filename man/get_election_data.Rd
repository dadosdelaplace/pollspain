% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_elections_data.R
\name{get_election_data}
\alias{get_election_data}
\title{Function to get jointly information on polling
stations and votes for candidacies.}
\usage{
get_election_data(
  type_elec,
  year = NULL,
  date = NULL,
  prec_round = 3,
  short_version = TRUE,
  verbose = TRUE,
  lazy_duckdb = FALSE
)
}
\arguments{
\item{type_elec}{Type elections for which data is available.
It should be one of the following values: "referendum",
"congress", "senate", "local", "cabildo" (Canarian council)
or "EU".}

\item{year}{A vector or single value representing the years of the
elections to be considered. Please, check in
\code{dates_elections_spain} that elections of the specified type
are available for the provided year.}

\item{date}{A vector or single value representing the dates of
the elections to be considered. If date was provided, it should be
in format \%Y-\%m-\%d (e.g., '2000-01-01'). Defaults to \code{NULL}.
If no date was provided, \code{year} should be provided as
numerical variable. Please, check in \code{dates_elections_spain}
that elections of the specified type are available.}

\item{prec_round}{Rounding accuracy. Defaults to
\code{prec_round = 3}.}

\item{short_version}{Flag to indicate whether it should be returned
a short version of the data (just key variables) or not.
Defaults to \code{TRUE}.}

\item{verbose}{Flag to indicate whether detailed messages should
be printed during execution. Defaults to \code{TRUE}.}

\item{lazy_duckdb}{Flag to indicate whether a lazy duckDB database
should be provided (\code{TRUE}) or a tibble (\code{FALSE}).
Defaults to \code{FALSE}.}
}
\value{
A tibble with rows corresponding to poll-stations for
each election, including the following variables:
\item{id_elec}{election's id constructed from the election code
\code{cod_elec} and date \code{date_elec}.}
\item{cod_elec}{code representing the type of election:
\code{"01"} (referendum), \code{"02"} (congress),
\code{"03"} (senate), \code{"04"} (local elections),
\code{"06"} (cabildo - Canarian council - elections), \code{"07"}
(European Parliament elections). Variable available only for
long version.}
\item{type_election}{type of the election.}
\item{date_elec}{date of the election. Variable available only for
long version.}
\item{id_INE_poll_station}{poll station's id constructed from the
ccaa-prov-municipality and poll station codes.}
\item{id_INE_mun}{municipality ID constructed from the
ccaa-prov-mun codes provided by INE.}
\item{cod_INE_ccaa, ccaa}{codes and names for regions (ccaa)
to which the municipalities belong. Codes available only for
long version.}
\item{cod_INE_prov, prov}{codes and names for the provinces to which
the municipalities belong. Codes available only for long version.}
\item{cod_INE_mun, mun}{code, and name for
municipalities. Codes available only for long version.}
\item{cod_mun_district, cod_sec, cod_poll_station}{codes for the
municipal district, census tract and poll station. They are
only available for long version.}
\item{ballots_1, turnout_1}{number of total ballots and turnout
percentage in the first round. Variables available only for
long version.}
\item{ballots_2, turnout_2}{number of total ballots and turnout
percentage in the second round (if applicable). Variables available
only for long version}
\item{blank_ballots, invalid_ballots}{blank and invalid ballots.}
\item{party_ballots, valid_ballots, total_ballots}{ballots to
candidacies/parties, valid ballots (sum of \code{blank_ballots} and
\code{party_ballots}) and total ballots (sum of
\code{valid_ballots} and \code{invalid_ballots}).}
\item{turnout}{final turnout percentage. It is only
available for long version.}
\item{porc_valid, porc_invalid, porc_parties, porc_blank}{perc (\%)
values of \code{valid_ballots}, \code{invalid_ballots},
\code{party_ballots} and \code{blank_ballots}.}
\item{n_poll_stations}{number of polling stations. It is only
available for long version.}
\item{pop_res_mun}{population census of residents (CER + CERA) at
municipality level.}
\item{census_counting_mun}{population eligible to vote after claims
at municipality level.}
\item{id_candidacies}{id for candidacies at province level.}
\item{id_candidacies_ccaa, id_candidacies_nat}{id for candidacies
at ccaa level (only provided for long version) and at national
level.}
\item{abbrev_candidacies, name_candidacies}{acronym and full name
of the candidacies. They are only available for long version.}
\item{ballots}{number of ballots obtained for each candidacy at
each poll station.}
}
\description{
Import and preprocess poll stations info but jointly
with the preprocessed candidacies data, for given election types
and dates, at poll station level. This function supports both
single values and vector inputs for fetching and combining data
for multiple elections at once.
}
\details{
The purpose of this function is to easily combine the
outputs of \code{import_poll_station_data()},
\code{import_mun_census_data()}, and
\code{import_candidacies_data()}, providing a tibble at the
polling station level with both general voting data (blank votes,
null votes, etc.) and votes for each candidacy (identified by
their corresponding ids). This function does not perform
aggregations and is not intended as a final-use tool for basic
users, but rather as an intermediate step for the
\code{summary_election_data()} function.
}
\examples{

## Correct examples

# Congress elections in year 2008, 2016 and "2023-07-24"
# in a short version
elections_data <-
  get_election_data(type_elec = "congress", year = c(2008, 2016),
                    date = "2023-07-24")

# Congress elections in 2008 in a long version
elections_data <-
  get_election_data(type_elec = "congress", year = 2008,
                    short_version = FALSE)

\dontrun{
# ----
# Incorrect examples
# ----

# Invalid election type: "national" is not a valid election type
get_election_data(type_elec = "national", year = 2019)

# Invalid date format: date should be in \%Y-\%m-\%d format
get_election_data(type_elec = "congress", date = "26-06-2016")

# Invalid short version flag: short_version should be a
# logical variable
get_election_data(type_elec = "congress", year = 2019,
                  short_version = "yes")

}

}
\author{
Javier Alvarez-Liebana and David Pereiro-Pol.
}
\keyword{get_elections_data}
