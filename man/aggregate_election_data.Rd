% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_elections_data.R
\name{aggregate_election_data}
\alias{aggregate_election_data}
\title{Aggregate elections data at provided level (ccaa, prov, etc)}
\usage{
aggregate_election_data(
  election_data,
  level = "all",
  by_parties = TRUE,
  prec_round = 3,
  verbose = TRUE,
  short_version = TRUE,
  lazy_duckdb = FALSE
)
}
\arguments{
\item{election_data}{A database containing general election data
already provided (by other functions or by the user). Database
should contain \code{col_id_elec}, \code{col_id_poll_station},
\code{cols_mun_var} and \code{col_id_candidacies} columns.
Defaults to \code{NULL}.}

\item{level}{A string providing the level of aggregation at which
the data is to be provided. The allowed values are the following:
'all', 'ccaa', 'prov', 'mun', 'mun_district', 'sec' or
'poll_station'. Defaults to \code{"all"}.}

\item{by_parties}{A flag indicates whether user wants a summary by
candidacies/parties or just global results at given \code{level}.
Defaults to \code{TRUE}.}

\item{prec_round}{Rounding accuracy. Defaults to
\code{prec_round = 3}.}

\item{verbose}{Flag to indicate whether detailed messages should
be printed during execution. Defaults to \code{TRUE}.}

\item{short_version}{Flag to indicate whether it should be returned
a short version of the data (just key variables) or not.
Defaults to \code{TRUE}.}

\item{lazy_duckdb}{Flag to indicate whether a lazy duckDB database
should be provided (\code{TRUE}) or a tibble (\code{FALSE}).
Defaults to \code{FALSE}.}
}
\value{
A tibble with rows corresponding to the level of aggregation for
each election, including the following variables:
\item{id_elec}{election's id constructed from the election code
\code{cod_elec} and date \code{date_elec}.}
\item{cod_elec}{code representing the type of election:
\code{"01"} (referendum), \code{"02"} (congress),
\code{"03"} (senate), \code{"04"} (local elections),
\code{"06"} (cabildo - Canarian council - elections), \code{"07"}
(European Parliament elections).}
\item{id_INE_xxx}{id for the xxx constituency provided in
\code{level}: id_INE_ccaa, id_INE_prov, etc.}
\item{xxx}{names for the xxx constituency provided in
\code{level}: ccaa, prov, etc.}
\item{blank_ballots, invalid_ballots}{blank and invalid ballots.}
\item{party_ballots, valid_ballots, total_ballots}{ballots to
candidacies/parties, valid ballots (sum of \code{blank_ballots} and
\code{party_ballots}) and total ballots (sum of
\code{valid_ballots} and \code{invalid_ballots}).}
\item{n_poll_stations}{number of polling stations.}
\item{id_candidacies}{id for candidacies (at province level).}
\item{id_candidacies_nat}{id for candidacies at region national
level.}
\item{ballots}{number of ballots obtained for each candidacy at
each level section.}
}
\description{
Aggregate polling station election results
to any chosen territorial level, providing party level ballots,
total ballots, number of polling stations and contextual sums.
}
\details{
This function is actually a helper function that, given
an electoral data file with a specific structure, aggregates the
information to the level specified in \code{level}. Data that is
only available at the provincial or municipal level is handled
differently when the aggregation level is below those levels
(for example, CERA data cannot be aggregated below the province,
in which case 52 special constituencies are added). This function
is not intended as a final-use tool for basic users, but rather as
an intermediate step for the \code{summary_election_data()}
function.
}
\examples{
## Correct examples

# Election data from 2023 and 1989
election_data <-
   get_election_data(type_elec = "congress", year = 2023,
                     date = "1989-10-29")

# National level results (without parties)
nat_agg <-
   election_data |>
   aggregate_election_data(level = "all", by_parties = FALSE)

# Province level results (with parties)
prov_agg <-
   election_data |>
   aggregate_election_data(level = "prov")

\dontrun{

# ----
# Incorrect examples
# ----

# Wrong examples

# Invalid 'level' argument,"district" is not allowed
aggregate_election_data(election_data, level = "district")

# Invalid 'by_parties' flag: it must be logical, not character
aggregate_election_data(election_data, level = "prov",
                        by_parties = "yes")

# Invalid parameters: col_id_candidacies should be matched with
# the variable names
aggregate_election_data(election_data, level = "ccaa",
                        col_id_candidacies = "wrong_id")

}

}
\author{
Javier Alvarez-Liebana and David Pereiro-Pol.
}
\keyword{get_elections_data}
