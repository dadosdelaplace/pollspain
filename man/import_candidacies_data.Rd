% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_elections_data.R
\name{import_candidacies_data}
\alias{import_candidacies_data}
\title{Import candidacies data}
\usage{
import_candidacies_data(
  type_elec,
  year = NULL,
  date = NULL,
  short_version = TRUE,
  verbose = TRUE,
  lazy_duckdb = FALSE
)
}
\arguments{
\item{type_elec}{Type elections for which data is available.
It should be one of the following values: "referendum",
"congress", "senate", "local", "cabildo" (Canarian council)
or "EU".}

\item{year}{A vector or single value representing the years of the
elections to be considered. Please, check in
\code{dates_elections_spain} that elections of the specified type
are available for the provided year.}

\item{date}{A vector or single value representing the dates of
the elections to be considered. If date was provided, it should be
in format \%Y-\%m-\%d (e.g., '2000-01-01'). Defaults to \code{NULL}.
If no date was provided, \code{year} should be provided as
numerical variable. Please, check in \code{dates_elections_spain}
that elections of the specified type are available.}

\item{short_version}{flag to indicate whether it should be returned
a short version of the data (just key  variables)
or not. Defaults to \code{TRUE}.}

\item{verbose}{Flag to indicate whether detailed messages should
be printed during execution. Defaults to \code{TRUE}.}

\item{lazy_duckdb}{Flag to indicate whether a lazy duckDB database
should be provided (\code{TRUE}) or a tibble (\code{FALSE}).
Defaults to \code{FALSE}.}
}
\value{
A tibble with candidacies data at poll station level
including the following variables:
\item{id_elec}{election's id constructed from the election code
\code{cod_elec} and date \code{date_elec}.}
\item{cod_elec}{code representing the type of election:
\code{"01"} (referendum), \code{"02"} (congress),
\code{"03"} (senate), \code{"04"} (local elections),
\code{"06"} (cabildo - Canarian council - elections), \code{"07"}
(European Parliament elections). Variable available only for
long version.}
\item{type_elec}{type of election.}
\item{date_elec}{date of the election.}
\item{id_INE_poll_station}{poll station's id constructed from the
ccaa-prov-municipality and poll station codes.}
\item{id_INE_mun}{municipality ID constructed from the
ccaa-prov-mun codes provided by INE.}
\item{cod_INE_ccaa, ccaa}{codes and names for regions (ccaa)
to which the municipalities belong. Codes available only for
long version.}
\item{cod_INE_prov, prov}{codes and names for the provinces to
which the municipalities belong. Codes available only for
long version.}
\item{cod_INE_mun, mun}{code, and name for
municipalities. Codes available only for
long version.}
\item{cod_mun_district, cod_sec, cod_poll_station}{codes for the
municipal district, census tract and poll station. Codes available
only for long version.}
\item{id_candidacies}{id for candidacies (at province level).}
\item{id_candidacies_ccaa, id_candidacies_nat}{id for
candidacies (at region - ccaa - and national level). Id's available
only for long version.}
\item{abbrev_candidacies, name_candidacies}{acronym and full name
of the candidacies.}
\item{ballots}{number of ballots obtained for each candidacy at
each poll station.}
}
\description{
Import and preprocess candidacies data. This function
supports both single values and vector inputs for fetching and
combining data for multiple elections at once.
}
\details{
This function fetches candidates data for the
specified elections by downloading the corresponding files from
\code{{pollspaindata}} package and processing them into a tidy format.
It automatically handles the download, loading, and merging of
data across multiple election periods as specified by the user.
}
\examples{

## Correct examples

# Fetch candidacies data for congress elections in multiple dates
# in a short version
candidacies_data <-
  import_candidacies_data(type_elec = "congress",
                          year = 2023,
                          date = "2019-04-28")

# Fetch candidacies data for congress elections in multiple dates
# in a long version
candidacies_data <-
  import_candidacies_data(type_elec = "congress",
                          year = c(1982, 2008),
                          short_version = FALSE)

# ----
# Incorrect examples
# ----

\dontrun{
# Wrong examples

# Invalid election type: "national" is not a valid election type
import_candidacies_data(type_elec = "national", year = 2019)

# Invalid election: no congress elections are available in 2018.
import_candidacies_data(type_elec = "congress", 2018)

# Invalid date format: date should be in \%Y-\%m-\%d format
import_candidacies_data(type_elec = "congress", date = "26-06-2016")

}

}
\author{
Javier Alvarez-Liebana, David Pereiro Pol, Mafalda Gonzalez
Gonzalez, Irene Bosque Gala and Mikaela De Smedt.
}
\keyword{import_elections_data}
