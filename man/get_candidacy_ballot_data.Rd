% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_elections_data.R
\name{get_candidacy_ballot_data}
\alias{get_candidacy_ballot_data}
\title{Get Candidacy Ballot Data}
\usage{
get_candidacy_ballot_data(
  type_elec,
  year,
  month,
  include_candidacy_names = TRUE
)
}
\arguments{
\item{type_elec}{Character vector. Specifies the type of election, either "congress" or "senate".}

\item{year}{Integer vector. Specifies the year(s) of the election(s).}

\item{month}{Integer vector. Specifies the month(s) of the election(s). The month should be in two digits (e.g., 03 for March).}

\item{include_candidacy_names}{Logical. If TRUE, the function will include the names of the candidacies by fetching additional data. Default is TRUE.}
}
\value{
A tibble containing the combined ballot data and, if requested, the names of the candidacies. The tibble includes the following columns (depending on the availability of data):
\item{cod_elec}{Election code.}
\item{type_elec}{Type of election.}
\item{date_elec}{Date of the election.}
\item{id_MIR_mun}{Unique ID for the municipality.}
\item{cod_MIR_ccaa}{Autonomous community code.}
\item{cod_INE_prov}{Province code.}
\item{cod_INE_mun}{Municipality code.}
\item{cod_mun_district}{Municipal district code.}
\item{cod_sec}{Section code.}
\item{cod_poll_station}{Polling station code.}
\item{turn}{Turnout.}
\item{id_candidacies}{Unique ID for the candidacies.}
\item{ballots}{Number of ballots cast.}
\item{abbrev_candidacies}{Abbreviation of the candidacies (if \code{include_candidacy_names} is TRUE).}
\item{name_candidacies}{Full name of the candidacies (if \code{include_candidacy_names} is TRUE).}
}
\description{
This function fetches and combines data on ballots cast for each candidacy in a specified election. It optionally includes the names of the candidacies. The data is retrieved from a specified GitHub repository containing Spanish election data.
}
\details{
The function retrieves data from a specified GitHub repository containing raw data files for Spanish congressional and senatorial elections. The function merges the ballots data with the candidacy names data if the \code{include_candidacy_names} parameter is set to TRUE. It ensures that no duplicate columns are retained in the final output.
}
\examples{
# Correct Use Cases

# Fetch ballots data for the 2004 congressional election in March, including candidacy names
ballots_data <- get_candidacy_ballot_data("congress", 2004, 03)
print(ballots_data)

# Fetch ballots data for the 2023 congressional election in July, excluding candidacy names
ballots_data <- get_candidacy_ballot_data("congress", 2023, 07, include_candidacy_names = FALSE)
print(ballots_data)

# Incorrect Use Cases

# Attempt to fetch ballots data with an invalid election type
\dontrun{
ballots_data <- get_candidacy_ballot_data("parliament", 2023, 07)
}
# This will raise an error because "parliament" is not a valid election type. The function only accepts "congress" or "senate".

# Attempt to fetch ballots data with an invalid month format
\dontrun{
ballots_data <- get_candidacy_ballot_data("congress", 2023, 13)
}
# This will raise an error or produce unexpected results because "13" is not a valid month. Months should be in two-digit format (e.g., 01 for January).

# Attempt to fetch ballots data with an invalid year format
\dontrun{
ballots_data <- get_candidacy_ballot_data("senate", 2023.5, 07)
}
# This will raise an error because the year should be an integer, not a decimal.

}
\author{
Mikaela DeSmedt, Javier Álvarez-Liébana
}
