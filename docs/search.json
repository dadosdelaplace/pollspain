[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pollspain authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Javier √Ålvarez-Li√©bana. Author, maintainer, copyright holder. David Pereiro-Pol. Author. Mafalda Gonz√°lez-Gonz√°lez. Author. Irene Bosque-Gala. Author. Mikaela De Smedt. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"√Ålvarez-Li√©bana J, Pereiro-Pol D, Gonz√°lez-Gonz√°lez M, Bosque-Gala , De Smedt M (2025). pollspain: grammar analysis electoral poll data. R package version 0.9.9, https://github.com/dadosdelaplace/pollspain.","code":"@Manual{,   title = {pollspain: A grammar for the analysis of electoral and poll data},   author = {Javier √Ålvarez-Li√©bana and David Pereiro-Pol and Mafalda Gonz√°lez-Gonz√°lez and Irene Bosque-Gala and Mikaela {De Smedt}},   year = {2025},   note = {R package version 0.9.9},   url = {https://github.com/dadosdelaplace/pollspain}, }"},{"path":"/index.html","id":"pollspain","dir":"","previous_headings":"","what":"A grammar for the analysis of electoral and poll data","title":"A grammar for the analysis of electoral and poll data","text":"development. Authors: Javier √Ålvarez-Li√©bana, David Pereiro-Pol, Mafalda Gonz√°lez-Gonz√°lez, Irene Bosque-Gala y Mikaela De Smedt.","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A grammar for the analysis of electoral and poll data","text":"Pending detail","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A grammar for the analysis of electoral and poll data","text":"can install development version R package pollspain GitHub following code:","code":"install.packages(\"devtools\") # only if not already installed devtools::install_github(\"dadosdelaplace/pollspain\") library(tidyverse) library(pollspain)"},{"path":[]},{"path":"/index.html","id":"election-data-functions","dir":"","previous_headings":"Usage","what":"election data functions","title":"A grammar for the analysis of electoral and poll data","text":"El c√≥digo de esta familia de funciones se puede encontrar en el script get_elections_data.R. La funci√≥n principal es summary_election_data(): dado un vector de fechas electorales, un vector de tipos de elecciones y un nivel geogr√°fico (\"\", \"ccaa\", \"prov\", ‚Ä¶), la funci√≥n devuelve al usuario una tabla de resumen de los resultados electorales. Indicando by_parties = TRUE la funci√≥n devuelve los resultados para cada partido o candidatura electoral, al nivel de agregaci√≥n pedido. Los niveles de agregaci√≥n (level) pueden ser: \"\", \"ccaa\", \"prov\", \"mun\", \"mun_district\" (distrito electoral), \"sec\" (secci√≥n censal) y \"poll_station\" (mesa electoral). Dicha funci√≥n combina, de manera sencilla para el usuario, get_election_data() y aggregate_election_data()","code":"# Summary election data at national level (general data without candidacies ballots) summary_data_all <- summary_election_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at national level ... #> ‚úÖüñá Join information sources and last summaries ... knitr::kable(summary_data_all) # Summary election data at ccaa level, aggregating the candidacies ballots summary_data_ccaa_parties <-   summary_election_data(\"congress\", 2019, 4, level = \"ccaa\",                         by_parties = TRUE) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at ccaa level ... #> ‚úÖüñá Join information sources and last summaries ... knitr::kable(head(summary_data_ccaa_parties, 10)) # Summary election data at prov level, aggregating the candidacies ballots summary_data_prov_parties <-   summary_election_data(\"congress\", 2019, 4, level = \"prov\",                         by_parties = TRUE) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at prov level ... #> ‚úÖüñá Join information sources and last summaries ..."},{"path":[]},{"path":"/index.html","id":"aggregate_election_data","dir":"","previous_headings":"Usage > election data functions","what":"aggregate_election_data()","title":"A grammar for the analysis of electoral and poll data","text":"La funci√≤n aggregate_election_data() est√° destinada agregar al nivel geogr√°fico pedido la informaci√≥n electoral que ya se le proporcione.","code":""},{"path":"/index.html","id":"import-functions","dir":"","previous_headings":"Usage","what":"import functions","title":"A grammar for the analysis of electoral and poll data","text":"Functions starting import_..._data() (whose code can found import_elections_data.R file) aimed importing preprocessing raw possible .DAT election files Spanish Ministry Interior. functions download .rda files available Github repository (directly downloaded MIR website).","code":""},{"path":"/index.html","id":"census-data-level-mun","dir":"","previous_headings":"Usage > import functions","what":"Census data (level: mun)","title":"A grammar for the analysis of electoral and poll data","text":"import_mun_census_data() import municipal census data one elections municipal level. function downloads processes ¬´raw¬ª municipal data files specified elections, providing variables related population, census administrative codes.","code":"mun_census_data <- import_mun_census_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true mun_census_data #> # A tibble: 8,131 √ó 18 #>    id_elec       cod_elec type_elec date_elec  id_INE_mun cod_INE_ccaa ccaa      #>    <glue>        <chr>    <chr>     <date>     <glue>     <chr>        <chr>     #>  1 02-2019-04-28 02       congress  2019-04-28 01-04-001  01           Andaluc√≠a #>  2 02-2019-04-28 02       congress  2019-04-28 01-04-002  01           Andaluc√≠a #>  3 02-2019-04-28 02       congress  2019-04-28 01-04-003  01           Andaluc√≠a #>  4 02-2019-04-28 02       congress  2019-04-28 01-04-004  01           Andaluc√≠a #>  5 02-2019-04-28 02       congress  2019-04-28 01-04-005  01           Andaluc√≠a #>  6 02-2019-04-28 02       congress  2019-04-28 01-04-006  01           Andaluc√≠a #>  7 02-2019-04-28 02       congress  2019-04-28 01-04-007  01           Andaluc√≠a #>  8 02-2019-04-28 02       congress  2019-04-28 01-04-008  01           Andaluc√≠a #>  9 02-2019-04-28 02       congress  2019-04-28 01-04-009  01           Andaluc√≠a #> 10 02-2019-04-28 02       congress  2019-04-28 01-04-010  01           Andaluc√≠a #> # ‚Ñπ 8,121 more rows #> # ‚Ñπ 11 more variables: cod_INE_prov <chr>, prov <chr>, cod_INE_mun <chr>, #> #   mun <chr>, cod_mun_jud_district <chr>, cod_mun_prov_council <chr>, #> #   n_poll_stations <dbl>, pop_res_mun <dbl>, census_INE_mun <dbl>, #> #   census_counting_mun <dbl>, census_CERE_mun <dbl>"},{"path":"/index.html","id":"poll-station-data-level-poll-station","dir":"","previous_headings":"Usage > import functions","what":"Poll station data (level: poll station)","title":"A grammar for the analysis of electoral and poll data","text":"import_poll_station_data() import preprocess elections data poll stations level given election types dates, providing variables related turnout, blank/valid votes, etc","code":"poll_data <- import_poll_station_data(\"congress\", 2019, c(4, 11)) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_poll_stations_congress_2019_11.rda?raw=true #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_mun_data_congress_2019_11.rda?raw=true #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' poll_data #> # A tibble: 119,697 √ó 20 #>    id_elec type_elec date_elec  id_INE_poll_station id_INE_mun ccaa  prov  mun   #>    <glue>  <chr>     <date>     <glue>              <glue>     <chr> <chr> <chr> #>  1 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-004-B  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  2 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-007-U  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  3 02-201‚Ä¶ congress  2019-04-28 01-04-003-02-001-A  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  4 02-201‚Ä¶ congress  2019-04-28 01-04-006-01-002-A  01-04-006  Anda‚Ä¶ Alme‚Ä¶ Albox #>  5 02-201‚Ä¶ congress  2019-04-28 01-04-008-01-001-A  01-04-008  Anda‚Ä¶ Alme‚Ä¶ Alc√≥‚Ä¶ #>  6 02-201‚Ä¶ congress  2019-04-28 01-04-010-01-001-U  01-04-010  Anda‚Ä¶ Alme‚Ä¶ Alha‚Ä¶ #>  7 02-201‚Ä¶ congress  2019-04-28 01-04-013-02-005-A  01-04-013  Anda‚Ä¶ Alme‚Ä¶ Alme‚Ä¶ #>  8 02-201‚Ä¶ congress  2019-04-28 01-04-013-03-011-A  01-04-013  Anda‚Ä¶ Alme‚Ä¶ Alme‚Ä¶ #>  9 02-201‚Ä¶ congress  2019-04-28 01-04-013-06-013-A  01-04-013  Anda‚Ä¶ Alme‚Ä¶ Alme‚Ä¶ #> 10 02-201‚Ä¶ congress  2019-04-28 01-04-013-06-016-B  01-04-013  Anda‚Ä¶ Alme‚Ä¶ Alme‚Ä¶ #> # ‚Ñπ 119,687 more rows #> # ‚Ñπ 12 more variables: blank_ballots <dbl>, invalid_ballots <dbl>, #> #   party_ballots <dbl>, valid_ballots <dbl>, total_ballots <dbl>, #> #   turnout <dbl>, porc_valid <dbl>, porc_invalid <dbl>, porc_parties <dbl>, #> #   porc_blank <dbl>, pop_res_mun <dbl>, census_counting_mun <dbl>"},{"path":"/index.html","id":"candidacies-data-level-poll-station","dir":"","previous_headings":"Usage > import functions","what":"Candidacies data (level: poll station)","title":"A grammar for the analysis of electoral and poll data","text":"import_candidacies_data() import preprocess candidacies data, providing variables related id candidacies, abbreviature names ballots obtained one poll station.","code":"candidacies_data <- import_candidacies_data(\"congress\", 2019, c(4, 11)) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_candidacies_poll_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_candidacies_poll_congress_2019_11.rda?raw=true #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' candidacies_data #> # A tibble: 1,482,129 √ó 12 #>    id_elec type_elec date_elec  id_INE_poll_station id_INE_mun ccaa  prov  mun   #>    <glue>  <chr>     <date>     <glue>              <glue>     <chr> <chr> <chr> #>  1 02-201‚Ä¶ congress  2019-04-28 01-04-001-01-001-B  01-04-001  Anda‚Ä¶ Alme‚Ä¶ Abla  #>  2 02-201‚Ä¶ congress  2019-04-28 01-04-001-01-001-B  01-04-001  Anda‚Ä¶ Alme‚Ä¶ Abla  #>  3 02-201‚Ä¶ congress  2019-04-28 01-04-002-01-001-A  01-04-002  Anda‚Ä¶ Alme‚Ä¶ Abru‚Ä¶ #>  4 02-201‚Ä¶ congress  2019-04-28 01-04-002-01-001-A  01-04-002  Anda‚Ä¶ Alme‚Ä¶ Abru‚Ä¶ #>  5 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-003-A  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  6 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-003-B  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  7 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-003-B  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  8 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-006-A  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #>  9 02-201‚Ä¶ congress  2019-04-28 01-04-003-01-007-U  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #> 10 02-201‚Ä¶ congress  2019-04-28 01-04-003-02-002-A  01-04-003  Anda‚Ä¶ Alme‚Ä¶ Adra  #> # ‚Ñπ 1,482,119 more rows #> # ‚Ñπ 4 more variables: id_candidacies <chr>, abbrev_candidacies <chr>, #> #   name_candidacies <chr>, ballots <dbl>"},{"path":"/index.html","id":"datos-del-cera-pending","dir":"","previous_headings":"Usage > import functions","what":"Datos del CERA (pending)","title":"A grammar for the analysis of electoral and poll data","text":"According National Statistics Institute (INE): ¬´electoral roll contains registration meet requirements voters definitively temporarily deprived right vote. electoral roll composed : electoral roll Spanish citizens residing Spain (CER). electoral roll Spanish citizens residing abroad (CERA). electoral roll residents Spain nationals countries Agreements municipal elections (CERE Agreements), electoral roll citizens European Union residing Spain municipal European Parliament elections (CERE EU).¬ª get_CERA_data() function returns data related CERA.","code":"ccaa_CERA_data <- get_CERA_data(election_data, level = \"ccaa\")"},{"path":"/index.html","id":"util-functions","dir":"","previous_headings":"Usage","what":"util functions","title":"A grammar for the analysis of electoral and poll data","text":"functions contained utils.R script intended serve helper functions data preprocessing. type_to_code_election(): converts election type (referendum, congress, senate, etc.) official ministry code. extract_code(): given polling station code, returns code corresponding requested level disaggregation. recod_parties(): recodes party names acronyms (pending)","code":"type_to_code_election(type_elec = \"congress\") #> [1] \"02\" extract_code(\"01-04-003-01-004-B\", level = \"mun\") #> [1] \"003\" extract_code(\"01-04-003-01-004-B\", level = \"mun\", full_cod = TRUE) #> [1] \"01-04-003\""},{"path":"/reference/aggregate_election_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"pending...","code":""},{"path":"/reference/aggregate_election_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"","code":"aggregate_election_data(   election_data,   level = \"all\",   by_parties = FALSE,   col_id_elec = \"id_elec\",   col_id_poll_station = \"id_INE_poll_station\",   cols_mun_var = c(\"pop_res_mun\", \"census_counting_mun\"),   col_id_candidacies = \"id_candidacies\",   cols_names_candidacies = c(\"abbrev_candidacies\", \"name_candidacies\"),   prec_round = 3,   verbose = TRUE )"},{"path":"/reference/aggregate_election_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"election_data database containing general election data already provided (functions user). Database contain col_id_elec column. Defaults NULL. level string providing level aggregation data provided. allowe values following: '', 'ccaa', 'prov', 'mun', 'mun_district', 'sec' 'poll_station'. Defaults \"\". by_parties flag indicates whether user wants summary candidacies/parties just global results given level. Defaults FALSE. col_id_elec Column name election_data uniquely identify elections. Defaults \"id_elec\". col_id_poll_station Column name ballots_data uniquely identify poll stations. Defaults \"id_INE_poll_station\". cols_mun_var vector variable names , raw version, available municipal level (higher). Defaults c(\"pop_res_mun\", \"census_counting_mun\"). col_id_candidacies string indicating name column uniquely identifies candidacies. Defaults \"id_candidacies\". cols_names_candidacies string indicating name column containg names /acronyms candidacies. Defaults c(\"abbrev_candidacies\", \"name_candidacies\"). prec_round Rounding accuracy. Defaults prec_round = 3. verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/aggregate_election_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"tibble rows corresponding municipalities election, including following variables: id_elec election's id constructed election code cod_elec date date_elec. cod_elec code representing type election: \"01\" (referendum), \"02\" (congress), \"03\" (senate), \"04\" (local elections), \"06\" (cabildo - Canarian council - elections), \"07\" (European Parliament elections). type_elec type election. date_elec date election. id_INE_poll_station poll station's id constructed ccaa-prov-municipality poll station codes. id_INE_mun municipality ID constructed ccaa-prov-mun codes provided INE. cod_INE_ccaa, ccaa codes names regions (ccaa) municipalities belong. cod_INE_prov, prov codes names provinces municipalities belong. cod_INE_mun, mun code, name municipalities. cod_mun_district, cod_sec, cod_poll_station codes municipal district, census tract poll station. ballots_1, turnout_1 number total ballots turnout percentage first round. ballots_2, turnout_2 number total ballots turnout percentage second round (applicable). blank_ballots, invalid_ballots blank invalid ballots. party_ballots, valid_ballots, total_ballots ballots candidacies/parties, valid ballots (sum blank_ballots party_ballots) total ballots (sum valid_ballots invalid_ballots). turnout final turnout percentage. porc_valid, porc_invalid, porc_parties, porc_blank perc (%) values valid_ballots, invalid_ballots, party_ballots blank_ballots. n_poll_stations number polling stations. pop_res_mun population census residents (CER + CERA) municipality level. census_counting_mun population eligible vote claims municipality level. id_candidacies id candidacies (province level). id_candidacies_ccaa, id_candidacies_nat id candidacies (region - ccaa - national level). abbrev_candidacies, name_candidacies acronym full name candidacies. ballots number ballots obtained candidacy poll station.","code":""},{"path":"/reference/aggregate_election_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"function fetches municipal-level data specified elections downloading corresponding .rda files GitHub https://github.com/dadosdelaplace/pollspain-data (directly downloaded MIR website) processing tidy format. automatically handles download, loading, merging data across multiple election periods specified user.","code":""},{"path":"/reference/aggregate_election_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"Javier √Ålvarez-Li√©bana David Pereiro-Pol.","code":""},{"path":"/reference/aggregate_election_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate elections data at provided level (ccaa, prov, etc) ‚Äî aggregate_election_data","text":"","code":"if (FALSE) { ## Correct examples  # Congress elections in April 2019 # Fetch elections data for the congress elections in April 2019 elections_data1 <- join_election_data(\"congress\", 2019, 4)  # Fetch join_election_data(\"congress\", 2019, 4, prec_round = 7) # data for the congress elections in April 2019 # with percentages rounded to 7 decimals elections_data2 <-   join_election_data(\"congress\", 2019, 4, prec_round = 7)  # Fetch elections data for the congress and senate elections in # April 2019 in a short version elections_data3 <-   join_election_data(c(\"congress\", \"senate\"), 2019, 4, short_version = TRUE)  # Example usage to combine data from different elections into one table # Fetch elections data for congress elections in Nov 2019 and June 2016 combined_elections_data <-   join_election_data(c(\"congress\", \"congress\"),                      c(2019, 2016), c(11, 6))  # Example usage providing date instead of month and year date_example <- join_election_data(\"congress\", date = \"2016-06-26\")  # Example usage providing external tables election_data <- import_poll_station_data(\"congress\", 2019, 4) ballots_data <- import_candidacies_data(\"congress\", 2019, 4) join_election_data(\"congress\", 2019, 4,                    election_data = election_data,                    ballots_data = ballots_data)  # Example usage providing external tables with different # column names election_data <-   import_poll_station_data(\"congress\", 2019, 4) |>   dplyr::rename(invent_1 = id_elec, invent_2 = id_INE_poll_station) ballots_data <-   import_candidacies_data(\"congress\", 2019, 4) |>   dplyr::rename(invent_1 = id_elec, invent_2 = id_INE_poll_station) join_data <-   join_election_data(\"congress\", 2019, 4,                      election_data = election_data,                      ballots_data = ballots_data,                      col_id_elec = \"invent_1\",                      col_id_poll = \"invent_2\")  # ---- # Incorrect examples # ----  # Wrong examples  # Invalid election type: \"national\" is not a valid election type join_election_data(\"national\", 2019, 4)  # Invalid election: no congress elections are available in 5-2019. # Please check dataset dates_elections_spain join_election_data(\"congress\", 2019, 5)  # Invalid date format: date should be in %Y-%m-%d format join_election_data(\"congress\", date = \"26-06-2016\")  # Invalid short version flag: short_version should be a # logical variable join_election_data(\"congress\", 2019, 4, short_version = \"yes\")  # Invalid include_candidates flag: include_candidates should be a # logical variable join_election_data(\"congress\", 2019, 4, include_candidates = \"no\")  # Invalid key columns: col_id_elec and col_id_poll should be # columns included in datasets election_data and ballots_data election_data <- import_poll_station_data(\"congress\", 2019, 4) ballots_data <- import_candidacies_data(\"congress\", 2019, 4) join_election_data(\"congress\", 2019, 4,                    election_data = election_data,                    ballots_data = ballots_data,                    col_id_elec = \"invent_1\",                    col_id_poll = \"invent_2\") }"},{"path":"/reference/cod_INE_ccaa.html","id":null,"dir":"Reference","previous_headings":"","what":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"dataset containing codes provided INE Spanish provinces regions. Last update: 2023/02/25","code":""},{"path":"/reference/cod_INE_ccaa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"","code":"data(cod_INE_ccaa)"},{"path":"/reference/cod_INE_ccaa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"data frame 19 rows 2 variables: cod_INE_ccaa: code regions ccaa: name regions","code":""},{"path":"/reference/cod_INE_ccaa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"Data extracted INE","code":""},{"path":"/reference/cod_INE_ccaa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"Data gathered processed Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/cod_INE_ccaa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"INE's code for ccaa and provinces ‚Äî cod_INE_ccaa","text":"","code":"# Load data data(cod_INE_ccaa)"},{"path":"/reference/cod_INE_mun.html","id":null,"dir":"Reference","previous_headings":"","what":"INE's code for municipalities ‚Äî cod_INE_mun","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"dataset containing codes provided INE Spanish municipalities. Last update: 2023/02/25 (data updated INE 2020/01/01)","code":""},{"path":"/reference/cod_INE_mun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"","code":"data(cod_INE_mun)"},{"path":"/reference/cod_INE_mun.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"data frame 8131 rows 7 variables: cod_INE_ccaa: code regions ccaa: name regions cod_INE_prov: code provinces prov: name provinces cod_INE_mun: code municipalities cd_INE_mun: check digit (see documentation) mun: name municipalities","code":""},{"path":"/reference/cod_INE_mun.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"Data extracted INE","code":""},{"path":"/reference/cod_INE_mun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"Data gathered processed Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/cod_INE_mun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"INE's code for municipalities ‚Äî cod_INE_mun","text":"","code":"# Load data data(cod_INE_mun)"},{"path":"/reference/cod_INE_prov.html","id":null,"dir":"Reference","previous_headings":"","what":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"dataset containing codes provided INE Spanish provinces regions. Last update: 2023/02/25","code":""},{"path":"/reference/cod_INE_prov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"","code":"data(cod_INE_prov)"},{"path":"/reference/cod_INE_prov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"data frame 52 rows 2 variables: cod_INE_prov: code province prov: name province","code":""},{"path":"/reference/cod_INE_prov.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"Data extracted INE","code":""},{"path":"/reference/cod_INE_prov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"Data gathered processed Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/cod_INE_prov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov","text":"","code":"# Load data data(cod_INE_prov)"},{"path":"/reference/cod_INE_prov_ccaa.html","id":null,"dir":"Reference","previous_headings":"","what":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"dataset containing codes provided INE Spanish provinces regions. Last update: 2023/02/25","code":""},{"path":"/reference/cod_INE_prov_ccaa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"","code":"data(cod_INE_prov_ccaa)"},{"path":"/reference/cod_INE_prov_ccaa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"data frame 52 rows 4 variables: cod_INE_ccaa: code region ccaa: name region cod_INE_prov: code province prov: name province","code":""},{"path":"/reference/cod_INE_prov_ccaa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"Data extracted INE","code":""},{"path":"/reference/cod_INE_prov_ccaa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"Data gathered processed Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/cod_INE_prov_ccaa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"INE's code for ccaa and provinces ‚Äî cod_INE_prov_ccaa","text":"","code":"# Load data data(cod_INE_prov_ccaa)"},{"path":"/reference/dates_elections_spain.html","id":null,"dir":"Reference","previous_headings":"","what":"Dates of Spanish elections ‚Äî dates_elections_spain","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"dataset containing dates Spanish elections referendum, congress, senate, municipal, cabildo (Canarian council) European Parlament elections. Last update: 2023/02/25","code":""},{"path":"/reference/dates_elections_spain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"","code":"data(dates_elections_spain)"},{"path":"/reference/dates_elections_spain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"data frame 64 rows 6 variables: cod_elec: code type elections. Allowed values: \"01\": referendum elections. \"02\": congress elections. \"03\": senate elections. \"04\": local (municipalities) elections. \"05\": regional  elections. \"06\": cabildo - Canarian council - elections). \"07\": European Parlament elections. type_elec: type elections (\"referendum\", \"congress\", \"senate\", \"local\", \"regional\", \"cabildo\" \"EU\"). date: date election \"YYYY-MM-DD\" format year, month, day: year, month day election topic: topic referendums (cod_elec = \"01\")","code":""},{"path":"/reference/dates_elections_spain.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"Data extracted Spanish Ministry Interior","code":""},{"path":"/reference/dates_elections_spain.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"Data gathered processed Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/dates_elections_spain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dates of Spanish elections ‚Äî dates_elections_spain","text":"","code":"# Load data data(dates_elections_spain)"},{"path":"/reference/extract_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract region codes from the poll stations codes ‚Äî extract_code","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"Extract region codes (aggregation levels ccaa, prov, mun, municipal districts census sections) given poll station code provided Spanish Ministry Interior (MIR) Spanish Statistical Office (INE)","code":""},{"path":"/reference/extract_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"","code":"extract_code(id_INE_poll_station, level = \"mun\", full_cod = FALSE)"},{"path":"/reference/extract_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"id_INE_poll_station poll station code. string vector tokens 18 19 characters 5 '-' according INE/MIR format\"). level aggregation level, want extract codes. taken following values: 'ccaa', 'prov', 'mun', 'mun-district', 'sec' 'poll-station' full_cod flag indicate codes provided full format (including codes aggregated levels) . Defaults FALSE.","code":""},{"path":"/reference/extract_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"string code subtract whole code properly id aggregation level required.","code":""},{"path":"/reference/extract_code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"Javier √Ålvarez-Li√©bana, David Pereiro-Pol, Mafalda Gonz√°lez-Gonz√°lez Irene Bosque-Gala.","code":""},{"path":"/reference/extract_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract region codes from the poll stations codes ‚Äî extract_code","text":"","code":"## Correct examples  # Code for Adra (\"003\"), from province of Almeria (\"04\") and ccaa of # Andalucia (\"01\"), first municipal district (\"01\"), census # sections district (\"004\") and poll station \"B\" id_INE_poll_station <- \"01-04-003-01-004-B\"  extract_code(id_INE_poll_station, level = \"mun\", full_cod = FALSE) #> [1] \"003\" extract_code(id_INE_poll_station, level = \"mun\", full_cod = TRUE) #> [1] \"01-04-003\" extract_code(id_INE_poll_station, level = \"prov\", full_cod = FALSE) #> [1] \"04\" extract_code(id_INE_poll_station, level = \"prov\", full_cod = TRUE) #> [1] \"01-04\" extract_code(id_INE_poll_station, level = \"ccaa\", full_cod = FALSE) #> [1] \"01\" extract_code(id_INE_poll_station, level = \"ccaa\", full_cod = TRUE) #> [1] \"01\" extract_code(id_INE_poll_station, level = \"mun_district\",              full_cod = TRUE) #> [1] \"01-04-003-01\"  # ---- # Incorrect examples # ----  if (FALSE) { extract_code(id_INE_poll_station, level = \"prov\", full_cod = false) extract_code(id_INE_poll_station, level = \"province\", full_cod = TRUE) extract_code(id_INE_poll_station, level = \"muni\", full_cod = \"all\") extract_code(id_INE_poll_station, level = \"poll\", full_cod = TRUE) extract_code(id_INE_poll_station, level = \"district\", full_cod = TRUE) }"},{"path":"/reference/get_election_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"Import preprocess poll stations info jointly preprocessed candidacies data, given election types dates, poll station level. function supports single values vector inputs fetching combining data multiple elections .","code":""},{"path":"/reference/get_election_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"","code":"get_election_data(   type_elec,   year = 2019,   month = 4,   date = NULL,   election_data = NULL,   ballots_data = NULL,   col_id_elec = \"id_elec\",   col_id_poll_station = \"id_INE_poll_station\",   prec_round = 3,   short_version = TRUE,   repo_url = \"https://github.com/dadosdelaplace/pollspain-data/blob/main\",   file_ext = \".rda\",   verbose = TRUE )"},{"path":"/reference/get_election_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year vector single value representing years elections considered. month vector single value representing months elections considered. Please, check (refer dates_elections_spain) elections specified type available provided year month. date vector single value representing dates elections considered. date provided, format %Y-%m-%d (e.g., '2000-01-01'). Defaults NULL. date provided, month year numerical variables. election_data database containing general election data already provided (functions user). Database contain col_id_elec column. Defaults NULL. ballots_data database containing ballots data different candidacies, already provided (functions user). Database contain col_id_poll_station column. Defaults NULL. col_id_elec Column name election_data uniquely identify elections. Defaults \"id_elec\". col_id_poll_station Column name ballots_data uniquely identify poll stations. Defaults \"id_INE_poll_station\". prec_round Rounding accuracy. Defaults prec_round = 3. short_version Flag indicate whether returned short version data (just key variables) . Defaults TRUE. repo_url string url raw data can found. Defaults https://github.com/dadosdelaplace/pollspain-data/blob/main. file_ext string file's extension. Defaults \".rda\". verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/get_election_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"tibble rows corresponding municipalities election, including following variables: id_elec election's id constructed election code cod_elec date date_elec. cod_elec code representing type election: \"01\" (referendum), \"02\" (congress), \"03\" (senate), \"04\" (local elections), \"06\" (cabildo - Canarian council - elections), \"07\" (European Parliament elections). Variable available long version. type_elec type election. date_elec date election. id_INE_mun municipality ID constructed ccaa-prov-mun codes provided INE. id_INE_poll_station poll station's id constructed ccaa-prov-municipality poll station codes. cod_INE_ccaa, ccaa codes names regions (ccaa) municipalities belong. Codes available long version. cod_INE_prov, prov codes names provinces municipalities belong. Codes available long version. cod_INE_mun, mun code, name municipalities. Codes available long version. cod_mun_district, cod_sec, cod_poll_station codes municipal district, census tract poll station. Codes available long version. census_counting_mun population eligible vote claims municipality level. ballots_1, turnout_1 number total ballots turnout percentage first round. Variables available long version. ballots_2, turnout_2 number total ballots turnout percentage second round (applicable). Variables available long version blank_ballots, invalid_ballots blank invalid ballots. party_ballots, valid_ballots, total_ballots ballots candidacies/parties, valid ballots (sum blank_ballots party_ballots) total ballots (sum valid_ballots invalid_ballots). turnout final turnout percentage. porc_valid, porc_invalid, porc_parties, porc_blank perc (%) values valid_ballots, invalid_ballots, party_ballots blank_ballots. n_poll_stations number polling stations. pop_res_mun population census residents (CER + CERA) municipality level. census_counting_mun population eligible vote claims municipality level. id_candidacies id candidacies (province level). id_candidacies_ccaa, id_candidacies_nat id candidacies (region - ccaa - national level). abbrev_candidacies, name_candidacies acronym full name candidacies. ballots number ballots obtained candidacy poll station.","code":""},{"path":"/reference/get_election_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"function fetches municipal-level data specified elections downloading corresponding .rda files GitHub https://github.com/dadosdelaplace/pollspain-data (directly downloaded MIR website) processing tidy format. automatically handles download, loading, merging data across multiple election periods specified user.","code":""},{"path":"/reference/get_election_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"Javier √Ålvarez-Li√©bana David Pereiro-Pol.","code":""},{"path":"/reference/get_election_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to get jointly information on polling\nstations and votes for candidacies. ‚Äî get_election_data","text":"","code":"## Correct examples  # Congress elections in April 2019 # Fetch elections data for the congress elections in April 2019 elections_data1 <- get_election_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data ... #> üì¶ Import candidacies and ballots data (at poll station level) ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Fetch elections data for the congress and senate elections # in April 2019 in a long version elections_data2 <-   get_election_data(c(\"congress\", \"senate\"), 2019, 4,                     short_version = FALSE) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data ... #> üì¶ Import candidacies and ballots data (at poll station level) ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds  # Fetch elections data for congress elections in Nov 2019, # April 2019, and June 2016 combined_elections_data <-   get_election_data(c(\"congress\", \"congress\"),                     c(2019, 2016), c(11, 6)) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data ... #> üì¶ Import candidacies and ballots data (at poll station level) ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage providing date instead of month and year date_example <- get_election_data(\"congress\", date = \"2016-06-26\") #> üîé Check if parameters are allowed... #> üì¶ Import poll station data ... #> üì¶ Import candidacies and ballots data (at poll station level) ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage providing external tables election_data <- import_poll_station_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' ballots_data <- import_candidacies_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_candidacies_poll_congress_2019_04.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' join_data <-   get_election_data(\"congress\", 2019, 4,                      election_data = election_data,                      ballots_data = ballots_data) #> üîé Check if parameters are allowed... #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage providing external tables with different # column names election_data <-   import_poll_station_data(\"congress\", 2019, 4) |>   dplyr::rename(invent_1 = id_elec, invent_2 = id_INE_poll_station) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' ballots_data <-   import_candidacies_data(\"congress\", 2019, 4) |>   dplyr::rename(invent_1 = id_elec, invent_2 = id_INE_poll_station) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_candidacies_poll_congress_2019_04.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE' join_data <-   get_election_data(\"congress\", 2019, 4,                     election_data = election_data,                     ballots_data = ballots_data,                     col_id_elec = \"invent_1\",                     col_id_poll_station = \"invent_2\") #> üîé Check if parameters are allowed... #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # ---- # Incorrect examples # ----  if (FALSE) { # Wrong examples  # Invalid election type: \"national\" is not a valid election type get_election_data(\"national\", 2019, 4)  # Invalid election: no congress elections are available in 5-2019. # Please check dataset dates_elections_spain get_election_data(\"congress\", 2019, 5)  # Invalid date format: date should be in %Y-%m-%d format get_election_data(\"congress\", date = \"26-06-2016\")  # Invalid short version flag: short_version should be a # logical variable get_election_data(\"congress\", 2019, 4, short_version = \"yes\")  # Invalid include_candidates flag: include_candidates should be # a logical variable get_election_data(\"congress\", 2019, 4, include_candidates = \"no\")  # Invalid key columns: col_id_elec and col_id_poll should be # columns included in datasets election_data and ballots_data election_data <- import_poll_station_data(\"congress\", 2019, 4) ballots_data <- import_candidacies_data(\"congress\", 2019, 4) get_election_data(\"congress\", 2019, 4,                    election_data = election_data,                    ballots_data = ballots_data,                    col_id_elec = \"invent_1\",                    col_id_poll_station = \"invent_2\") }"},{"path":"/reference/get_mun_census_data.html","id":null,"dir":"Reference","previous_headings":"","what":"... ‚Äî get_mun_census_data","title":"... ‚Äî get_mun_census_data","text":"...","code":""},{"path":"/reference/get_mun_census_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"... ‚Äî get_mun_census_data","text":"","code":"get_mun_census_data(type_elec, year, month, short_output = TRUE)"},{"path":"/reference/import_candidacies_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import candidacies data ‚Äî import_candidacies_data","title":"Import candidacies data ‚Äî import_candidacies_data","text":"Import preprocess candidacies data. function supports single values vector inputs fetching combining data multiple elections .","code":""},{"path":"/reference/import_candidacies_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import candidacies data ‚Äî import_candidacies_data","text":"","code":"import_candidacies_data(   type_elec,   year = 2019,   month = 4,   date = NULL,   repo_url = \"https://github.com/dadosdelaplace/pollspain-data/blob/main\",   file_ext = \".rda\",   short_version = TRUE,   verbose = TRUE )"},{"path":"/reference/import_candidacies_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import candidacies data ‚Äî import_candidacies_data","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year vector single value representing years elections considered. month vector single value representing months elections considered. Please, check (refer dates_elections_spain) elections specified type available provided year month. date vector single value representing dates elections considered. date provided, format %Y-%m-%d (e.g., '2000-01-01'). Defaults NULL. date provided, month year numerical variables. repo_url string url raw data can found. Defaults https://github.com/dadosdelaplace/pollspain-data/blob/main. file_ext string file's extension. Defaults \".rda\". short_version flag indicate whether returned short version data (just key  variables) . Defaults TRUE. verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/import_candidacies_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import candidacies data ‚Äî import_candidacies_data","text":"tibble candidacies data poll station level including following variables: id_elec election's id constructed election code cod_elec date date_elec. cod_elec code representing type election: \"01\" (referendum), \"02\" (congress), \"03\" (senate), \"04\" (local elections), \"06\" (cabildo - Canarian council - elections), \"07\" (European Parliament elections). Variable available long version. type_elec type election. date_elec date election. id_INE_poll_station poll station's id constructed ccaa-prov-municipality poll station codes. id_INE_mun municipality ID constructed ccaa-prov-mun codes provided INE. cod_INE_ccaa, ccaa codes names regions (ccaa) municipalities belong. Codes available long version. cod_INE_prov, prov codes names provinces municipalities belong. Codes available long version. cod_INE_mun, mun code, name municipalities. Codes available long version. cod_mun_district, cod_sec, cod_poll_station codes municipal district, census tract poll station. Codes available long version. id_candidacies id candidacies (province level). id_candidacies_ccaa, id_candidacies_nat id candidacies (region - ccaa - national level). Id's available long version. abbrev_candidacies, name_candidacies acronym full name candidacies. ballots number ballots obtained candidacy poll station.","code":""},{"path":"/reference/import_candidacies_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import candidacies data ‚Äî import_candidacies_data","text":"function fetches candidates data specified elections downloading corresponding .rda files GitHub https://github.com/dadosdelaplace/pollspain-data (directly downloaded MIR website) processing tidy format. automatically handles download, loading, merging data across multiple election periods specified user.","code":""},{"path":"/reference/import_candidacies_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import candidacies data ‚Äî import_candidacies_data","text":"Javier √Ålvarez-Li√©bana, David Pereiro Pol, Mafalda Gonz√°lez Gonz√°lez, Irene Bosque Gala Mikaela De Smedt.","code":""},{"path":"/reference/import_candidacies_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import candidacies data ‚Äî import_candidacies_data","text":"","code":"## Correct examples  # Congress elections in April 2019 # Fetch candidacies data for the congress elections in April 2019 candidacies_data1 <- import_candidacies_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_candidacies_poll_congress_2019_04.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Fetch candidacies data for the congress and senate elections # in April 2019 candidacies_data2 <-   import_candidacies_data(c(\"congress\", \"senate\"), 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_candidacies_poll_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_candidacies_poll_senate_2019_04.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage to combine data from different elections into # one table # Fetch candidacies data for congress elections in Nov 2019 # and June 2016 combined_candidacies_data <-   import_candidacies_data(c(\"congress\", \"congress\"),                           c(2019, 2016), c(11, 6)) #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_candidacies_poll_congress_2016_06.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_candidacies_poll_congress_2019_11.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage providing date instead of month and year date_example <-   import_candidacies_data(\"congress\", date = \"2016-06-26\") #> üîé Check if parameters are allowed... #> üì¶ Import candidacies data at poll station level from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_candidacies_poll_congress_2016_06.rda?raw=true #>  #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # ---- # Incorrect examples # ----  if (FALSE) { # Wrong examples  # Invalid election type: \"national\" is not a valid election type import_candidacies_data(\"national\", 2019, 4)  # Invalid election: no congress elections are available in 5-2019. # Please check dataset dates_elections_spain import_candidacies_data(\"congress\", 2019, 5)  # Invalid date format: date should be in %Y-%m-%d format import_candidacies_data(\"congress\", date = \"26-06-2016\")  }"},{"path":"/reference/import_mun_census_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import municipal census data ‚Äî import_mun_census_data","title":"Import municipal census data ‚Äî import_mun_census_data","text":"Import municipal census data one elections municipal level. function downloads processes raw municipal data files specified elections.","code":""},{"path":"/reference/import_mun_census_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import municipal census data ‚Äî import_mun_census_data","text":"","code":"import_mun_census_data(   type_elec,   year = 2019,   month = 4,   date = NULL,   repo_url = \"https://github.com/dadosdelaplace/pollspain-data/blob/main\",   file_ext = \".rda\",   verbose = TRUE )"},{"path":"/reference/import_mun_census_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Import municipal census data ‚Äî import_mun_census_data","text":"definitions variables extracted https://www.ige.gal.","code":""},{"path":"/reference/import_mun_census_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import municipal census data ‚Äî import_mun_census_data","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year vector single value representing years elections considered. month vector single value representing months elections considered. Please, check (refer dates_elections_spain) elections specified type available provided year month. date vector single value representing dates elections considered. date provided, format %Y-%m-%d (e.g., '2000-01-01'). Defaults NULL. date provided, month year numerical variables. repo_url string url raw data can found. Defaults https://github.com/dadosdelaplace/pollspain-data/blob/main. file_ext string file's extension. Defaults \".rda\". verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/import_mun_census_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import municipal census data ‚Äî import_mun_census_data","text":"tibble rows corresponding municipalities election, including following variables: id_elec election's id constructed election code cod_elec date date_elec. cod_elec code representing type election: \"01\" (referendum), \"02\" (congress), \"03\" (senate), \"04\" (local elections), \"06\" (cabildo - Canarian council - elections), \"07\" (European Parliament elections). type_elec type election. date_elec date election. id_INE_mun municipality ID constructed ccaa-prov-mun codes provided INE. cod_INE_ccaa, ccaa codes names regions (ccaa) municipalities belong. cod_INE_prov, prov codes names provinces municipalities belong. cod_INE_mun, mun code, name municipalities. cod_mun_jud_district, cod_mun_prov_council codes judicial district provincial council. n_poll_stations number polling stations municipality. pop_res_mun population census residents (CER + CERA) municipality level. census_INE_mun population eligible vote municipality level. census_counting_mun population eligible vote claims municipality level. census_CERE_mun census foreign nationals, relevant EU elections municipality level.","code":""},{"path":"/reference/import_mun_census_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import municipal census data ‚Äî import_mun_census_data","text":"function fetches municipal-level data specified elections downloading corresponding .rda files GitHub https://github.com/dadosdelaplace/pollspain-data (directly downloaded MIR website) processing tidy format. automatically handles download, loading, merging data across multiple election periods specified user.","code":""},{"path":"/reference/import_mun_census_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import municipal census data ‚Äî import_mun_census_data","text":"Javier √Ålvarez-Li√©bana, David Pereiro Pol, Mafalda Gonz√°lez Gonz√°lez, Irene Bosque Gala Mikaela De Smedt.","code":""},{"path":"/reference/import_mun_census_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import municipal census data ‚Äî import_mun_census_data","text":"","code":"## Correct examples  # Congress elections in April 2019 # Fetch municipal census data for the congress elections in # April 2019 mun_census_data1 <- import_mun_census_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #>   # Senate elections in April 2019 # Fetch municipal census data for the senate elections in # April 2019 mun_census_data2 <- import_mun_census_data(\"senate\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_mun_data_senate_2019_04.rda?raw=true #>   # Example usage to combine data from different elections into # one table # Fetch municipal census data for congress elections in Nov 2019 # and June 2016 combined_mun_census_data <-   import_mun_census_data(c(\"congress\", \"congress\"),                          c(2019, 2016), c(11, 6)) #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_mun_data_congress_2016_06.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_mun_data_congress_2019_11.rda?raw=true #>   # Example usage providing date instead of month and year date_example <-   import_mun_census_data(\"congress\", date = \"2016-06-26\") #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_mun_data_congress_2016_06.rda?raw=true #>   # ---- # Incorrect examples # ---- if (FALSE) { # Wrong examples  # Invalid election type: \"national\" is not a valid election type import_mun_census_data(\"national\", 2019, 4)  # Invalid election: no congress elections are available in 5-2019. # Please check dataset dates_elections_spain import_mun_census_data(\"congress\", 2019, 5)  # Invalid date format: date should be in %Y-%m-%d format import_mun_census_data(\"congress\", date = \"26-06-2016\") }"},{"path":"/reference/import_poll_station_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import poll station data ‚Äî import_poll_station_data","title":"Import poll station data ‚Äî import_poll_station_data","text":"Import preprocess elections data poll stations level given election types dates. function supports single values vector inputs fetching combining data multiple elections .","code":""},{"path":"/reference/import_poll_station_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import poll station data ‚Äî import_poll_station_data","text":"","code":"import_poll_station_data(   type_elec,   year = 2019,   month = 4,   date = NULL,   prec_round = 3,   short_version = TRUE,   repo_url = \"https://github.com/dadosdelaplace/pollspain-data/blob/main\",   file_ext = \".rda\",   verbose = TRUE )"},{"path":"/reference/import_poll_station_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import poll station data ‚Äî import_poll_station_data","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year vector single value representing years elections considered. month vector single value representing months elections considered. Please, check (refer dates_elections_spain) elections specified type available provided year month. date vector single value representing dates elections considered. date provided, format %Y-%m-%d (e.g., '2000-01-01'). Defaults NULL. date provided, month year numerical variables. prec_round Rounding accuracy. Defaults prec_round = 3. short_version Flag indicate whether returned short version data (just key variables) . Defaults TRUE. repo_url string url raw data can found. Defaults https://github.com/dadosdelaplace/pollspain-data/blob/main. file_ext string file's extension. Defaults \".rda\". verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/import_poll_station_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import poll station data ‚Äî import_poll_station_data","text":"tibble rows corresponding municipalities election, including following variables: id_elec election's id constructed election code cod_elec date date_elec. cod_elec code representing type election: \"01\" (referendum), \"02\" (congress), \"03\" (senate), \"04\" (local elections), \"06\" (cabildo - Canarian council - elections), \"07\" (European Parliament elections). Variable available long version. type_elec type election. date_elec date election. id_INE_mun municipality ID constructed ccaa-prov-mun codes provided INE. id_INE_poll_station poll station's id constructed ccaa-prov-municipality poll station codes. cod_INE_ccaa, ccaa codes names regions (ccaa) municipalities belong. Codes available long version. cod_INE_prov, prov codes names provinces municipalities belong. Codes available long version. cod_INE_mun, mun code, name municipalities. Codes available long version. cod_mun_district, cod_sec, cod_poll_station codes municipal district, census tract poll station. Codes available long version. census_counting_mun population eligible vote claims municipality level. ballots_1, turnout_1 number total ballots turnout percentage first round. Variables available long version. ballots_2, turnout_2 number total ballots turnout percentage second round (applicable). Variables available long version blank_ballots, invalid_ballots blank invalid ballots. party_ballots, valid_ballots, total_ballots ballots candidacies/parties, valid ballots (sum blank_ballots party_ballots) total ballots (sum valid_ballots invalid_ballots). turnout final turnout percentage. porc_valid, porc_invalid, porc_parties, porc_blank perc (%) values valid_ballots, invalid_ballots, party_ballots blank_ballots. pop_res_mun population census residents (CER + CERA) municipality level.","code":""},{"path":"/reference/import_poll_station_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import poll station data ‚Äî import_poll_station_data","text":"function fetches poll station-level data specified elections downloading corresponding .rda files GitHub https://github.com/dadosdelaplace/pollspain-data (directly downloaded MIR website) processing tidy format. automatically handles download, loading, merging data across multiple election periods specified user.","code":""},{"path":"/reference/import_poll_station_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import poll station data ‚Äî import_poll_station_data","text":"Javier √Ålvarez-Li√©bana, David Pereiro Pol, Mafalda Gonz√°lez Gonz√°lez, Irene Bosque Gala Mikaela De Smedt.","code":""},{"path":"/reference/import_poll_station_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import poll station data ‚Äî import_poll_station_data","text":"","code":"## Correct examples  # Congress elections in April 2019 # Fetch poll station data for the congress elections in April 2019 # in a short version poll_station_data1 <- import_poll_station_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  #' # Fetch poll station data for the congress and senate elections # in April 2019 in a short version poll_station_data2 <-   import_poll_station_data(c(\"congress\", \"senate\"), 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_poll_stations_senate_2019_04.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_mun_data_senate_2019_04.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Fetch poll station data for the congress and senate elections in # April 2019 in a long version poll_station_data3 <-   import_poll_station_data(c(\"congress\", \"senate\"), 2019, 4,                            short_version = FALSE) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_poll_stations_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_poll_stations_senate_2019_04.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201904/raw_mun_data_congress_2019_04.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/03-senate/03201904/raw_mun_data_senate_2019_04.rda?raw=true #>   # Fetch poll station data for congress elections in Nov 2019 # and June 2016 combined_poll_station_data <-   import_poll_station_data(c(\"congress\", \"congress\"),                            c(2019, 2016), c(11, 6)) #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_poll_stations_congress_2016_06.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_poll_stations_congress_2019_11.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_mun_data_congress_2016_06.rda?raw=true #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201911/raw_mun_data_congress_2019_11.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # Example usage providing date instead of month and year date_example <-   import_poll_station_data(\"congress\", date = \"2016-06-26\") #> üîé Check if parameters are allowed... #> üì¶ Import poll station data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_poll_stations_congress_2016_06.rda?raw=true #>  #> üîé Check if parameters are allowed... #> üì¶ Import census mun data from ... #> - https://github.com/dadosdelaplace/pollspain-data/blob/main/02-congress/02201606/raw_mun_data_congress_2016_06.rda?raw=true #>  #> ‚ö†Ô∏è A short version was asked. If you require all variables, please run with `short_version = FALSE'  # ---- # Incorrect examples # ----  if (FALSE) { # Wrong examples  # Invalid election type: \"national\" is not a valid election type import_poll_station_data(\"national\", 2019, 4)  # Invalid election: no congress elections are available in 5-2019. # Please check dataset dates_elections_spain import_poll_station_data(\"congress\", 2019, 5)  # Invalid date format: date should be in %Y-%m-%d format import_poll_station_data(\"congress\", date = \"26-06-2016\")  # Invalid short version flag: short_version should be a logical # variable import_poll_station_data(\"congress\", 2019, 4,                          short_version = \"yes\") }"},{"path":"/reference/import_raw_elections_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Import raw data files of elections ‚Äî import_raw_elections_files","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"Import raw data files elections provided Spanish Ministry Interior (MIR)","code":""},{"path":"/reference/import_raw_elections_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"","code":"import_raw_candidacies_file(   type_elec,   year,   month,   base_url = \"https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/\",   encoding = \"Latin1\",   starts = c(1, 3, 7, 9, 15, 65, 215, 221, 227),   ends = c(2, 6, 8, 14, 64, 214, 220, 226, 232) )  import_raw_candidates_file(   type_elec,   year,   month,   base_url = \"https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/\",   encoding = \"Latin1\",   starts = c(1, 3, 7, 9, 10, 12, 13, 16, 22, 25, 26, 51, 76, 101, 102, 104, 106, 110,     120),   ends = c(2, 6, 8, 9, 11, 12, 15, 21, 24, 25, 50, 75, 100, 101, 103, 105, 109, 119, 120) )  import_raw_mun_MIR_files(   type_elec,   year,   month,   base_url = \"https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/\",   encoding = \"Latin1\",   starts = c(1, 3, 7, 10, 12, 14, 17, 19, 120, 123, 129, 137, 142, 150, 158),   ends = c(2, 6, 8, 11, 13, 16, 18, 118, 122, 125, 136, 141, 149, 157, 165) )  import_poll_stations_MIR_files(   type_elec,   year,   month,   base_url = \"https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/\",   encoding = \"Latin1\",   starts = c(1, 3, 7, 9, 10, 12, 14, 17, 19, 23, 24, 31, 38, 45, 52, 59, 66, 73, 80),   ends = c(2, 6, 8, 9, 11, 13, 16, 18, 22, 23, 30, 37, 44, 51, 58, 65, 72, 79, 86) )  import_raw_candidacies_poll_file(   type_elec,   year,   month,   base_url = \"https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/\",   encoding = \"Latin1\",   starts = c(1, 3, 7, 9, 10, 12, 14, 17, 19, 23, 24, 30),   ends = c(2, 6, 8, 9, 11, 13, 16, 18, 22, 23, 29, 36) )"},{"path":"/reference/import_raw_elections_files.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"Data extracted ","code":""},{"path":"/reference/import_raw_elections_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"type_elec type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year, month Year month election unloaded. Please sure (see dates_elections_spain) elections provided type available given year month. base_url common path data downloaded encoding Encoding format passed read_lines() function starts, ends Cut-points splitting raw .DAT files dataset several variables, according documentation provided MIR files.","code":""},{"path":"/reference/import_raw_elections_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"tibble many rows poll stations set following variables \"01\": referendum. \"02\": congress. \"03\": senate. \"04\": local elections. \"06\": cabildo - Canarian council - elections). \"07\": European Parlament elections.","code":""},{"path":"/reference/import_raw_elections_files.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/import_raw_elections_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import raw data files of elections ‚Äî import_raw_elections_files","text":"","code":"## Extracting codes  # Right examples extract_code(id_INE_poll_station, level = \"mun\", full_cod = FALSE) #> Error in extract_code(id_INE_poll_station, level = \"mun\", full_cod = FALSE): object 'id_INE_poll_station' not found extract_code(id_INE_poll_station, level = \"mun\", full_cod = TRUE) #> Error in extract_code(id_INE_poll_station, level = \"mun\", full_cod = TRUE): object 'id_INE_poll_station' not found  if (FALSE) { # Wrong examples extract_code(id_INE_poll_station, level = \"prov\", full_cod = false) }"},{"path":"/reference/pollspain-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pollspain -- blabla ‚Äî pollspain-package","title":"pollspain -- blabla ‚Äî pollspain-package","text":"bla bla","code":""},{"path":"/reference/pollspain-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"pollspain -- blabla ‚Äî pollspain-package","text":"Garc√≠a-Portugu√©s, E., √Ålvarez-Li√©bana, J., √Ålvarez-P√©rez, G. Gonz√°lez-Manteiga, W. (2019). goodness--fit test functional linear model functional response. arXiv:1909.07686. https://arxiv.org/abs/1909.07686 Garc√≠a-Portugu√©s, E., Gonz√°lez-Manteiga, W. Febrero-Bande, M. (2014). goodness--fit test functional linear model scalar response. Journal Computational Graphical Statistics, 23(3):761--778. http://doi.org/10.1080/10618600.2013.812519","code":""},{"path":"/reference/pollspain-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pollspain -- blabla ‚Äî pollspain-package","text":"Javier √Ålvarez-Li√©bana.","code":""},{"path":"/reference/recod_parties.html","id":null,"dir":"Reference","previous_headings":"","what":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"function standardizes recodes names abbreviations Spanish political party names given dataset. handles various text transformations, removing special characters, trimming whitespace, converting characters ASCII. function also recodes certain party names abbreviations standardized formats based predefined patterns.","code":""},{"path":"/reference/recod_parties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"parties_data dataset (preferably tibble) containing political party data. Function expect dataset 2 columns party acronyms full names. col_acronym character string specifying column name party acronyms parties_data. Defaults \"abbrev_candidacies\". col_full_name character string specifying column name party full names parties_data. Defaults \"name_candidacies\".","code":""},{"path":"/reference/recod_parties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"tibble standardized recoded political party names acronyms. output datasets includes cleaned versions original columns recoded values based predefined patterns.","code":""},{"path":"/reference/recod_parties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"function first renames specified columns input dataset standard format. performs series text cleaning operations, removing special characters, replacing certain symbols hyphens, converting accented characters ASCII equivalents. cleaning text, function applies series pattern-matching rules recode specific party names abbreviations standardized versions.","code":""},{"path":"/reference/recod_parties.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"Javier √Ålvarez-Li√©bana, David Pereiro-Pol, Mafalda Gonz√°lez-Gonz√°lez Irene Bosque-Gala.","code":""},{"path":"/reference/recod_parties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recoding Spanish political party or candidacies names and\npreprocessing of acronyms ‚Äî recod_parties","text":"","code":"if (FALSE) { # Assuming `party_data` is a dataframe with columns # \"abbrev\" and \"full_name\" standardized_data <-   recod_parties(party_data, col_name_abbrev = \"abbrev\",                 col_name_candidacies = \"full_name\") }"},{"path":"/reference/summary_election_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"pending...","code":""},{"path":"/reference/summary_election_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"","code":"summary_election_data(   type_elec,   year = 2019,   month = 4,   date = NULL,   election_data = NULL,   ballots_data = NULL,   col_id_elec = \"id_elec\",   col_id_poll_station = \"id_INE_poll_station\",   prec_round = 3,   short_version = TRUE,   repo_url = \"https://github.com/dadosdelaplace/pollspain-data/blob/main\",   file_ext = \".rda\",   level = \"all\",   by_parties = FALSE,   filter_porc_ballots = NA,   cols_mun_var = c(\"pop_res_mun\", \"census_counting_mun\"),   col_id_candidacies = \"id_candidacies\",   cols_names_candidacies = c(\"abbrev_candidacies\", \"name_candidacies\"),   verbose = TRUE )"},{"path":"/reference/summary_election_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\". year vector single value representing years elections considered. month vector single value representing months elections considered. Please, check (refer dates_elections_spain) elections specified type available provided year month. date vector single value representing dates elections considered. date provided, format %Y-%m-%d (e.g., '2000-01-01'). Defaults NULL. date provided, month year numerical variables. election_data database containing general election data already provided (functions user). Database contain col_id_elec column. Defaults NULL. ballots_data database containing ballots data different candidacies, already provided (functions user). Database contain col_id_poll_station column. Defaults NULL. col_id_elec Column name election_data uniquely identify elections. Defaults \"id_elec\". col_id_poll_station Column name ballots_data uniquely identify poll stations. Defaults \"id_INE_poll_station\". prec_round Rounding accuracy. Defaults prec_round = 3. short_version Flag indicate whether returned short version data (just key variables) . Defaults TRUE. repo_url string url raw data can found. Defaults https://github.com/dadosdelaplace/pollspain-data/blob/main. file_ext string file's extension. Defaults \".rda\". level string providing level aggregation data provided. allowe values following: '', 'ccaa', 'prov', 'mun', 'mun_district', 'sec' 'poll_station'. Defaults \"\". by_parties flag indicates whether user wants summary candidacies/parties just global results given level. Defaults FALSE. filter_porc_ballots numerical argument representing vote percentage threshold (100) user wants use filter parties (long by_parties = TRUE). Defaults NA. cols_mun_var vector variable names , raw version, available municipal level (higher). Defaults c(\"pop_res_mun\", \"census_counting_mun\"). col_id_candidacies string indicating name column uniquely identifies candidacies. Defaults \"id_candidacies\". cols_names_candidacies string indicating name column containg names /acronyms candidacies. Defaults c(\"abbrev_candidacies\", \"name_candidacies\"). verbose Flag indicate whether detailed messages printed execution. Defaults TRUE.","code":""},{"path":"/reference/summary_election_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"tibble rows corresponding ...pending","code":""},{"path":"/reference/summary_election_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"function ... pending","code":""},{"path":"/reference/summary_election_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"Javier √Ålvarez-Li√©bana David Pereiro-Pol.","code":""},{"path":"/reference/summary_election_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summaries of the electoral and candidacies ballots data for\na given aggregation level (ccaa, prov, etc) ‚Äî summary_election_data","text":"","code":"## Correct examples  # Summary election data at national level (general data # without candidacies ballots) summary_data_all <- summary_election_data(\"congress\", 2019, 4) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at national level ... #> ‚úÖüñá Join information sources and last summaries ... #>   # Summary election data at national level, aggregating the # candidacies ballots summary_data_all_parties <-   summary_election_data(\"congress\", 2019, 4, by_parties = TRUE) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at national level ... #> ‚úÖüñá Join information sources and last summaries ... #>   # Summary election data at ccaa level (general data # without candidacies ballots) summary_data_ccaa <-   summary_election_data(\"congress\", 2019, 4, level = \"ccaa\") #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at ccaa level ... #> ‚úÖüñá Join information sources and last summaries ... #>   # Summary election data at ccaa level, aggregating the # candidacies ballots summary_data_ccaa_parties <-   summary_election_data(\"congress\", 2019, 4, level = \"ccaa\",                         by_parties = TRUE) #> üîé Check if parameters are allowed... #> üì¶ Import data at poll station level ... #> ‚è≥ Please wait, the volume of data downloaded and the internet connection may take a few seconds #>    üó∫ Aggregate data at ccaa level ... #> ‚úÖüñá Join information sources and last summaries ... #>   if (FALSE) { # ---- # Incorrect examples # ----  # Wrong examples  }"},{"path":"/reference/type_to_code_election.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion type election to code ‚Äî type_to_code_election","title":"Conversion type election to code ‚Äî type_to_code_election","text":"Conversion type election (referendum, congress, etc) properly code (according documentation) available Spanish Ministry Interior","code":""},{"path":"/reference/type_to_code_election.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion type election to code ‚Äî type_to_code_election","text":"","code":"type_to_code_election(type_elec)"},{"path":"/reference/type_to_code_election.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Conversion type election to code ‚Äî type_to_code_election","text":"Data extracted https://infoelectoral.interior.gob.es/opencms/es/elecciones-celebradas/area-de-descargas/Spanish Ministry Interior","code":""},{"path":"/reference/type_to_code_election.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion type election to code ‚Äî type_to_code_election","text":"type_elec Type elections data available. one following values: \"referendum\", \"congress\", \"senate\", \"local\", \"cabildo\" (Canarian council) \"EU\".","code":""},{"path":"/reference/type_to_code_election.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion type election to code ‚Äî type_to_code_election","text":"vector string codes (cod_elec) follows: \"01\": referendum. \"02\": congress. \"03\": senate. \"04\": local elections. \"06\": cabildo - Canarian council - elections). \"07\": European Parlament elections.","code":""},{"path":"/reference/type_to_code_election.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion type election to code ‚Äî type_to_code_election","text":"Javier √Ålvarez-Li√©bana, David Pereiro-Pol, Mafalda Gonz√°lez-Gonz√°lez Irene Bosque-Gala.","code":""},{"path":"/reference/type_to_code_election.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion type election to code ‚Äî type_to_code_election","text":"","code":"## Correct examples  type_to_code_election(type_elec = \"congress\") #> [1] \"02\" type_to_code_election(type_elec = \"senate\") #> [1] \"03\" type_to_code_election(type_elec = \"local\") #> [1] \"04\"  # ---- # Incorrect examples # ----  if (FALSE) { type_to_code_election(type_elec = \"hi!\") type_to_code_election(type_elec = \"nop\") type_to_code_election(type_elec = \"national\") }"}]
